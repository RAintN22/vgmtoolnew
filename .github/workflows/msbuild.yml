name: MSBuild

on: [push, pull_request]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - name: Checkout submodules
      uses: textbook/git-checkout-submodule-action@2.1.1

    - name: Build Number Generator
      uses: einaregilsson/build-number@v3
      with:
        token: ${{secrets.GITHUB_TOKEN}}  

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}

    - name: Zip
      shell: cmd
      run: |
        7z a "vgmtool-b${{env.BUILD_NUMBER}}.zip" .\x64\Release\*.exe vgmtool.txt

    - name: Create release
      if: github.ref == 'refs/heads/master'
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{secrets.GITHUB_TOKEN}}"
        automatic_release_tag: "b${{env.BUILD_NUMBER}}"
        prerelease: false
        title: "Automatic build #${{env.BUILD_NUMBER}}"
        files: |
          *.zip